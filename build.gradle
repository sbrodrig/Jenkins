/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'java'
    id 'eclipse'
    id 'pmd'
    id 'checkstyle'
    id 'com.github.spotbugs' version '2.0.1'
}

//sourceCompatibility = 1.8

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

pmd {
	ignoreFailures = true
	pmdTest.enabled=false
	sourceSets = [sourceSets.main]
	ruleSets = [
            'java-basic',
            'java-braces',
            'java-clone',
            'java-codesize',
            'java-comments',
            'java-controversial',
            'java-coupling',
            'java-design',
            'java-empty',
            'java-finalizers',
            'java-imports',
            'java-optimizations',
            'java-strictexception',
            'java-strings',
            'java-typeresolution',
            'java-unnecessary',
            'java-unusedcode'
    ]
}

tasks.withType(Pmd){
    reports{
        xml.enabled=true
        html.enabled=true
    }
}

checkstyle{
	toolVersion = '8.11'
	configFile = rootProject.file('config/checkstyle/checkstyle.xml')
	ignoreFailures = true
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}

tasks.withType(Checkstyle){
	reports{
		xml.enabled=false
		html.enabled=true
	}
}

spotbugs{
	toolVersion='4.0.0-beta4'
	ignoreFailures=true
	spotbugsTest.enabled=false
}

tasks.withType(com.github.spotbugs.SpotBugsTask){
	reports{
		xml.enabled=false
		html.enabled=true
	}
}

/*findbugs {
	ignoreFailures = true
	findbugsTest.enabled=false
  	sourceSets = [sourceSets.main]
  	effort = "max"
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}*/


 
